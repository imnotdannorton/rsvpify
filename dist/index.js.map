{"version":3,"sources":["../src/index.js"],"names":["require","config","app","fileopts","root","__dirname","dotfiles","headers","Date","now","server","createServer","use","exposedHeaders","corsHeaders","json","limit","bodyLimit","db","get","req","res","find","sendFile","listen","process","env","PORT","port","console","log","address"],"mappings":";;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAXAA,QAAQ,QAAR,EAAkBC,MAAlB;;AAaA,IAAIC,MAAM,wBAAV;AACA,IAAIC,WAAY;AACdC,QAAMC,YAAY,SADJ;AAEdC,YAAU,MAFI;AAGdC,WAAS;AACL,mBAAeC,KAAKC,GAAL,EADV;AAEL,cAAU;AAFL;AAHK,CAAhB;AAQAP,IAAIQ,MAAJ,GAAa,eAAKC,YAAL,CAAkBT,GAAlB,CAAb;;AAEA;AACAA,IAAIU,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEA;AACAV,IAAIU,GAAJ,CAAQ,oBAAK;AACZC,kBAAgB,iBAAOC;AADX,CAAL,CAAR;;AAIAZ,IAAIU,GAAJ,CAAQ,qBAAWG,IAAX,CAAgB;AACvBC,SAAQ,iBAAOC;AADQ,CAAhB,CAAR;;AAIA;AACA,kBAAc,cAAM;;AAEnB;AACAf,MAAIU,GAAJ,CAAQ,0BAAW,EAAEX,wBAAF,EAAUiB,MAAV,EAAX,CAAR;;AAEA;AACAhB,MAAIU,GAAJ,CAAQ,MAAR,EAAgB,mBAAI,EAAEX,wBAAF,EAAUiB,MAAV,EAAJ,CAAhB;AACChB,MAAIiB,GAAJ,CAAQ,WAAR,EAAqB,UAASC,GAAT,EAAcC,GAAd,EAAkB;AACrC;AACA;AACA,qBAAOC,IAAP,CAAYF,GAAZ,EAAiBC,GAAjB;AACD,GAJD;AAKAnB,MAAIiB,GAAJ,CAAQ,GAAR,EAAa,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC/BA,QAAIE,QAAJ,CAAa,WAAb,EAA0BpB,QAA1B;AACD,GAFD;AAGDD,MAAIQ,MAAJ,CAAWc,MAAX,CAAkBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,iBAAOC,IAA7C,EAAmD,YAAM;AACxDC,YAAQC,GAAR,sBAA+B5B,IAAIQ,MAAJ,CAAWqB,OAAX,GAAqBH,IAApD;AACA,GAFD;AAGA,CAlBD;;kBAoBe1B,G","file":"index.js","sourcesContent":["require('dotenv').config();\n\nimport http from 'http';\nimport express from 'express';\nimport cors from 'cors';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\nimport initializeDb from './db';\nimport middleware from './middleware';\nimport api from './api';\nimport config from './config.json';\nimport lookup from './lookup';\n\nlet app = express();\nlet fileopts =  {\n  root: __dirname + '/views/',\n  dotfiles: 'deny',\n  headers: {\n      'x-timestamp': Date.now(),\n      'x-sent': true\n  }\n};\napp.server = http.createServer(app);\n\n// logger\napp.use(morgan('dev'));\n\n// 3rd party middleware\napp.use(cors({\n\texposedHeaders: config.corsHeaders\n}));\n\napp.use(bodyParser.json({\n\tlimit : config.bodyLimit\n}));\n\n// connect to db\ninitializeDb( db => {\n\n\t// internal middleware\n\tapp.use(middleware({ config, db }));\n\n\t// api router\n\tapp.use('/api', api({ config, db }));\n  app.get('/find/:id', function(req, res){\n    // console.log(api.find);\n    // api.find(req, res);\n    lookup.find(req, res);\n  });\n  app.get('/', function (req, res) {\n    res.sendFile('home.html', fileopts);\n  });\n\tapp.server.listen(process.env.PORT || config.port, () => {\n\t\tconsole.log(`Started on port ${app.server.address().port}`);\n\t});\n});\n\nexport default app;\n"]}